package pong;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.Random;

public class ball {

	public int x, y, width = 25, height = 25;

	public int motionx, motiony;

	public Random random;
	public int amountofhit;

	private pong pong;

	public ball(pong pong) {

		this.pong = pong;

		this.random = new Random();

		spawn();

	}

	public void update(paddle paddle1, paddle paddle2) {

		int speed = 3;

		this.x += motionx * speed;
		this.y += motiony * speed;
		if (checkcollision(paddle1) == 1) {

			this.motionx = 2 + (amountofhit / 5);
			this.motiony = -2 + random.nextInt(4);
			if (motiony == 0) {

				motiony = 2;

			}
			amountofhit++;
		}

		else if (checkcollision(paddle1) == 3) {

			this.motiony = 2;
			this.motionx = 2 + random.nextInt(4);
			if (motionx == 0) {

				motionx = 2;

			}
		} else if (checkcollision(paddle1) == 4) {

			this.motiony = -2;
			this.motionx = -2 + random.nextInt(4);
			if (motionx == 0) {

				motionx = 2;

			}

		}

		else if (checkcollision(paddle2) == 3) {

			this.motiony = 2;
			this.motionx = 2 + random.nextInt(4);
			if (motionx == 0) {

				motionx = 2;

			}
		} else if (checkcollision(paddle2) == 4) {

			this.motiony = -2;
			this.motionx = -2 + random.nextInt(4);
			if (motionx == 0) {

				motionx = 2;

			}

		}

		else if (checkcollision(paddle2) == 1) {

			this.motionx = -2 - (amountofhit / 5);
			this.motiony = -2 + random.nextInt(4);
			if (motiony == 0) {

				motiony = 2;

			}
			amountofhit++;
		}

		else if (checkcollision(paddle1) == 2) {
			spawn();
			paddle2.score++;

		} else if (checkcollision(paddle1) == 5) {
			spawn();
			paddle2.score++;

		}

		else if (checkcollision(paddle2) == 5) {
			spawn();
			paddle1.score++;

		}
		
		
		else if (checkcollision(paddle1) == 6) {
			spawn();
			paddle2.score++;

		}

		else if (checkcollision(paddle2) == 6) {
			spawn();
			paddle1.score++;

		}

		else if (checkcollision(paddle2) == 2) {

			spawn();
			paddle1.score++;
		}

	}

	public void spawn() {

		this.x = pong.width / 2 - this.width / 2;
		this.y = pong.height / 2 - this.height / 2;
		this.motiony = -2 + random.nextInt(4);

		if (motiony == 0) {

			motiony = 2;

		}
		if (random.nextBoolean()) {
			motionx = 2;

		}
		this.motionx = -2 + random.nextInt(4);

	}

	public int checkcollision(paddle paddle) {
		if (this.x < paddle.ax + paddle.width && this.x + width > paddle.ax && this.y < paddle.ay + paddle.height
				&& this.y + height > paddle.ay) {

			return 1;

		}

		else if (new Rectangle(this.x, this.y, width, height)
				.intersects(new Rectangle(paddle.bx, paddle.cy, paddle.height, paddle.width))) {

			return 3;

		}

		else if (new Rectangle(this.x, this.y, width, height)
				.intersects(new Rectangle(paddle.bx, paddle.dy, paddle.height, paddle.width))) {

			return 4;

		}

		else if ((paddle.ax > x + width && paddle.paddlenumber == 1) || (paddle.ax < x && paddle.paddlenumber == 2)) {
			return 2;
		}
		
		
		

		else if (this.x < pong.width / 2 && this.y < 0 && paddle.paddlenumber == 1) {

			return 5;

		} else if (this.x > pong.width / 2 && this.y < 0 && paddle.paddlenumber == 2) {

			return 5;
		}
		
		else if (this.x < pong.width / 2 && this.y > pong.height && paddle.paddlenumber == 1) {

			return 6;

		} else if (this.x > pong.width / 2 && this.y> pong.height&& paddle.paddlenumber == 2) {

			return 6;
		}

		
		
		
		
		
		
		
		
		
		

		return 0;

	}

	public void render(Graphics g) {

		g.setColor(Color.WHITE);
		g.fillOval(x, y, width, height);

	}

}
